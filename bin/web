#!/usr/bin/env bash
#!/bin/bash

#***********************************************************************
# Script  : web
# Version : 1.o
# ocsearch
#***********************************************************************

NODE_PROXY_IP="10.1.236.66"
NODE_PROXY_PORT="58080"
SERVER_HOME=$(cd `dirname $0`/..; pwd)
. ${SERVER_HOME}/bin/Utilities.sh

function print_usage(){
  echo "Usage: web [COMMAND]"
  echo "  where COMMAND is one of:"
  echo "  start                                 run the configuration server"
  echo "  stop                                  shutdown the configuration server"
  echo "  restart                               restart the configuration server"
}


function start(){
    if [ ! -d "${SERVER_HOME}/logs/web_pid.log" ]; then
       touch "${SERVER_HOME}/logs/web_pid.log"
    fi

    proc_id=`cat ${SERVER_HOME}/logs/web_pid.log`
    if [[ -z ${proc_id} ]];then
        out "Starting the server..."
        chmod +x ${SERVER_HOME}/web/node/bin/node

        # change reverse proxy
        perl -pi -e "s/((\d{1,3}.){3}\d{1,3}:\d+)/${NODE_PROXY_IP}\:${NODE_PROXY_PORT}/g" web/server/app.js
        perl -pi -e "s/((\d{1,3}.){3}\d{1,3}:\d+)/${NODE_PROXY_IP}\:${NODE_PROXY_PORT}/g" web/dist/views/result.html
        perl -pi -e "s/((\d{1,3}.){3}\d{1,3}:\d+)/${NODE_PROXY_IP}\:${NODE_PROXY_PORT}/g" web/dist/views/detail.html

        cd ${SERVER_HOME}/web
        nohup ./node/bin/node ./server/app.js >> ${SERVER_HOME}/logs/web.log 2>&1 &
        pid=`echo $!`
        sleep 1

        ps -p ${pid} > /dev/null 2>&1

        if [ $? -eq 0 ]; then
            echo ${pid} > ${SERVER_HOME}/logs/web_pid.log
            success "Start the server successfully."
            success "Please check log ${SERVER_HOME}/logs/web.log for details."
        else
            error "Start the server failed!"
            error "Please check log ${SERVER_HOME}/logs/web.log for error messages."
        fi
    else
        out "The server is running ! "
    fi
}

function stop(){
    proc_id=`cat ${SERVER_HOME}/logs/web_pid.log`
    if [[ -z ${proc_id} ]];then
        out "The server is not running ! "
    else
         out "Stopping the server..."
         for id in ${proc_id[*]}
         do
           ps -ef|grep ${id}|grep -v grep
           if [ $? -eq 0 ];then
               kill ${id}

               if [ $? -eq 0 ];then
                    success "Stop the server successfully."
                    echo > ${SERVER_HOME}/logs/web_pid.log
               else
                    error "Stop the server failed! "
                    error "Please check log ${SERVER_HOME}/logs/web.log for error messages."
               fi
           else
                out "The server which process id ${id} is not running ! "
                echo > ${SERVER_HOME}/logs/web_pid.log
           fi

         done
    fi
}


if [ $# -eq 0 ]; then
    print_usage;
elif [ $# -eq 1 ]; then
    case $1 in
    start)
        start;;
    stop)
        stop;;
    restart)
        stop
        start;;
    --help|-help|-h)
        print_usage;;
    *)
        error "Invalid argument, please refer to: "
        print_usage;;
    esac
else
    print_usage
fi

exit 0;